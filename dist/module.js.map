{"version":3,"sources":["../src/module.js"],"names":["MetricsPanelCtrl","_","moment","angular","Plotly","PlotlyPanelCtrl","$scope","$injector","$q","$rootScope","$timeout","$window","timeSrv","uiSegmentSrv","q","data","traces","displayOptions","sizeChanged","initalized","$tooltip","$","dcfg","mapping","x","y","z","color","size","x_query","y_query","z_query","settings","type","mode","displayModeBar","line","width","dash","shape","marker","symbol","sizemode","sizemin","sizeref","showscale","color_option","layout","autosize","showlegend","dragmode","hovermode","plot_bgcolor","paper_bgcolor","font","family","margin","t","b","l","r","xaxis","showgrid","zeroline","gridcolor","rangemode","yaxis","scene","title","zaxis","panel","pconfig","extend","cfg","events","on","onInitEditMode","bind","onRender","onDataReceived","onDataError","onPanelInitalized","onRefresh","element","onResize","err","seriesList","render","console","log","graph","redraw","addEditorTab","refresh","segs","newSegment","value","subTabIndex","axis","disp","query_idx","idx","config","metric","name","onConfigChanged","s","options","showLink","displaylogo","modeBarButtonsToRemove","rect","getBoundingClientRect","old","height","newPlot","xxx","mouse","points","length","pt","body","pointNumber","html","place_tt","pageX","pageY","detach","range","from","utc","to","setTime","Plots","purge","innerHTML","resize","letters","i","Math","floor","random","obj","prefix","allKeys","Object","keys","forEach","key","prefixedKey","concat","findKeys","join","dataQuery","targets","refId","data_group","dataObject","trace","target","datapoints","j","point","esKeys","esKeyLookup","val","xIndex","yIndex","zIndex","xdata","ydata","zdata","Array","isArray","push","getRandomColor","scope","elem","attrs","ctrl","find","evt","txt","when","templateUrl"],"mappings":"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","file":"module.js","sourcesContent":["\nimport {MetricsPanelCtrl} from  'app/plugins/sdk';\n\nimport _ from 'lodash';\nimport moment from 'moment';\nimport angular from 'angular';\n\nimport * as Plotly from './external/plotly';\n\nclass PlotlyPanelCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $q, $rootScope, $timeout, $window, timeSrv, uiSegmentSrv) {\n    super($scope, $injector);\n\n    this.$rootScope = $rootScope;\n    this.timeSrv = timeSrv;\n    this.uiSegmentSrv = uiSegmentSrv;\n    this.q = $q;\n\n    this.data = [];\n    this.traces = {};\n    this.displayOptions = {};\n    this.sizeChanged = true;\n    this.initalized = false;\n\n    this.$tooltip = $('<div id=\"tooltip\" class=\"graph-tooltip\">');\n\n\n    var dcfg = {\n      mapping: {\n        x: null,\n        y: null,\n        z: null,\n        color: null,\n        size: null,\n        x_query: 0,\n        y_query: 0,\n        z_query: 0,\n      },\n      settings: {\n        type: 'scatter',\n        mode: 'lines+markers',\n        displayModeBar: false,\n        line: {\n          color : null,\n          width : 6,\n          dash  : 'solid',\n          shape : 'linear'\n        },\n        marker: {\n          size: 12,\n          symbol: 'circle',\n          color: null,\n          // colorscale: 'YIOrRd',\n          sizemode: 'diameter',\n          sizemin: 3,\n          sizeref: 0.2,\n          line: {\n            color: '#DDD',\n            width: 0\n          },\n          showscale: false\n        },\n        color_option: 'solid'\n      },\n      layout: {\n        autosize: false,\n        showlegend: true,\n        // legend: {\"orientation\": \"v\"},\n        dragmode: 'lasso', // (enumerated: \"zoom\" | \"pan\" | \"select\" | \"lasso\" | \"orbit\" | \"turntable\" )\n        hovermode: 'closest',\n        plot_bgcolor: \"#1f1d1d\",\n        paper_bgcolor: 'rgba(0,0,0,0)', // transparent?\n        font: {\n          color: '#D8D9DA',\n          family: '\"Open Sans\", Helvetica, Arial, sans-serif'\n        },\n        margin: {\n          t: 0,\n          b: 45,\n          l: 65,\n          r: 20,\n        },\n        xaxis: {\n          showgrid: true,\n          zeroline: false,\n          type: 'linear',\n          gridcolor: '#444444',\n          rangemode: 'normal' // (enumerated: \"normal\" | \"tozero\" | \"nonnegative\" )\n        },\n        yaxis: {\n          showgrid: true,\n          zeroline: false,\n          type: 'linear',\n          gridcolor: '#444444',\n          rangemode: 'normal' // (enumerated: \"normal\" | \"tozero\" | \"nonnegative\" )\n        },\n        scene: {\n          xaxis:{title: 'X AXIS'},\n          yaxis:{title: 'Y AXIS'},\n          zaxis:{title: 'Z AXIS'},\n        },\n      }\n    };\n\n    // There are a bunch of default settings we want to override from grafana's settings\n    // this.panel.pconfig.settings.marker.color = null;\n    // this.panel.pconfig.settings.marker.showscale = false;\n    // this.panel.pconfig.settings.marker.size = 12;\n    // this.panel.pconfig.settings.line.color = null;\n    // this.panel.pconfig.layout.showlegend = true;\n\n    this.panel.pconfig = $.extend(true, dcfg, this.panel.pconfig);\n\n    var cfg = this.panel.pconfig;\n    this.layout = $.extend(true, {}, this.panel.pconfig.layout);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('panel-initialized', this.onPanelInitalized.bind(this));\n    this.events.on('refresh', this.onRefresh.bind(this));\n\n    angular.element($window).bind('resize', this.onResize.bind(this) );\n  }\n\n  onResize() {\n    this.sizeChanged = true;\n  }\n\n  onDataError(err) {\n    this.seriesList = [];\n    this.render([]);\n    console.log(\"onDataError\", err);\n  }\n\n  onRefresh() {\n    if(this.graph && this.initalized) {\n      Plotly.redraw(this.graph);\n    }\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Display', 'public/plugins/natel-plotly-panel/tab_display.html',2);\n  //  this.editorTabIndex = 1;\n    this.refresh();\n    this.segs = {\n      symbol: this.uiSegmentSrv.newSegment({value: this.panel.pconfig.settings.marker.symbol })\n    };\n    this.subTabIndex = 0; // select the options\n\n    var cfg = this.panel.pconfig;\n    this.axis = [\n      {\n        disp: 'X Axis',\n        query_idx: (query_idx) => {if (query_idx) { cfg.mapping.x_query = query_idx} return cfg.mapping.x_query},\n        idx: 1,\n        config: cfg.layout.xaxis,\n        metric: (name) => { if(name) { cfg.mapping.x=name; } return cfg.mapping.x; }\n      },\n      {\n        disp: 'Y Axis',\n        query_idx: (query_idx) => {if (query_idx) { cfg.mapping.y_query = query_idx} return cfg.mapping.y_query},\n        idx: 2,\n        config: cfg.layout.yaxis,\n        metric: (name) => { if(name) { cfg.mapping.y=name; } return cfg.mapping.y; }\n        },\n      {\n        disp: 'Z Axis',\n        query_idx: (query_idx) => {if (query_idx) { cfg.mapping.z_query = query_idx} return cfg.mapping.z_query},\n        idx: 3,\n        config: cfg.layout.yaxis,\n        metric: (name) => { if(name) { cfg.mapping.z=name; } return cfg.mapping.z; }\n      }\n    ];\n  }\n\n  isAxisVisible(axis) {\n    if(axis.idx==3) {\n      return this.panel.pconfig.settings.type === 'scatter3d';\n    }\n    return true;\n  }\n\n  onSegsChanged() {\n    this.panel.pconfig.settings.marker.symbol = this.segs.symbol.value;\n    this.onConfigChanged();\n\n    console.log( this.segs.symbol, this.panel.pconfig );\n  }\n\n  onPanelInitalized() {\n    this.onConfigChanged();\n  }\n\n  onRender() {\n\n    if(!this.initalized) {\n      var s = this.panel.pconfig.settings;\n\n      var options = {\n        showLink: false,\n        displaylogo: false,\n        displayModeBar: s.displayModeBar,\n        modeBarButtonsToRemove: ['sendDataToCloud'] //, 'select2d', 'lasso2d']\n      }\n\n      var data = this.data;\n      var rect = this.graph.getBoundingClientRect();\n\n      var old = this.layout;\n      this.layout = $.extend(true, {}, this.panel.pconfig.layout );\n      this.layout.height = this.height;\n      this.layout.width = rect.width;\n      if(old) {\n        this.layout.xaxis.title = old.xaxis.title;\n        this.layout.yaxis.title = old.yaxis.title;\n      }\n\n      console.log('drawing', this.graph, data, this.layout, options);\n      Plotly.newPlot(this.graph, data, this.layout, options);\n\n      if(false) {\n        this.graph.on('plotly_hover', (data, xxx) => {\n          console.log( 'HOVER!!!', data, xxx, this.mouse );\n          if(data.points.length>0) {\n            var idx = 0;\n            var pt = data.points[idx];\n\n            var body = '<div class=\"graph-tooltip-time\">'+ pt.pointNumber +'</div>';\n            body += \"<center>\";\n            body += pt.x + ', '+pt.y;\n            body += \"</center>\";\n\n            this.$tooltip.html( body ).place_tt( this.mouse.pageX + 10, this.mouse.pageY );\n          }\n        }).on('plotly_unhover', (data) => {\n          this.$tooltip.detach();\n        });\n      }\n\n      this.graph.on('plotly_selected',  (data) => {\n        const range = {\n          from: moment.utc(data.range.x[0]),\n          to: moment.utc(data.range.x[1])\n        };\n\n        this.timeSrv.setTime(range);\n\n        // rebuild the graph after query\n        if(this.graph) {\n          Plotly.Plots.purge(this.graph);\n          this.graph.innerHTML = '';\n          this.initalized = false;\n        }\n      });\n    }\n    else {\n      Plotly.redraw(this.graph);\n    }\n\n    if(this.sizeChanged && this.graph && this.layout) {\n      var rect = this.graph.getBoundingClientRect();\n      this.layout.width = rect.width;\n      Plotly.Plots.resize(this.graph);\n    }\n    this.sizeChanged = false;\n    this.initalized = true;\n  }\n\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++ ) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n\n  findKeys(obj, prefix) {\n    let allKeys = {};\n    prefix = prefix || [];\n    Object.keys(obj).forEach((key) => {\n      let value = obj[key];\n      const prefixedKey = prefix.concat(key);\n      if (typeof value === 'object') {\n        Object.keys(this.findKeys(value, prefixedKey)).forEach((key) => {\n          allKeys[key] = prefixedKey;\n        });\n      } else {\n        allKeys[prefixedKey.join('.')] = prefixedKey;\n      }\n    });\n    return allKeys;\n  }\n\n  onDataReceived(dataQuery) {\n    // We recive a list of data objects, one from each query specified.\n    console.log('this is', this);\n    console.log('data received is', dataQuery);\n\n    this.traces = {};\n    this.displayOptions = {};\n    for(let i=0; i<this.panel.targets.length; i++) {\n      this.traces[this.panel.targets[i].refId] = {};\n      this.displayOptions[this.panel.targets[i].refId] = {};\n    }\n    // How to clear the data without assigning a new array\n    this.data.length = 0;\n\n    let cfg = this.panel.pconfig;\n    let mapping = cfg.mapping;\n\n    for(let data_group=0; data_group<dataQuery.length; data_group++){\n      // Once we can determine the data source, we can remove this hack\n      let refId;\n      if (dataQuery.length != this.panel.targets.length){\n        refId = this.panel.targets[0].refId;\n      } else {\n        refId = this.panel.targets[data_group].refId;\n      }\n\n      let dataObject = dataQuery[data_group];\n      let trace = {\n        type: cfg.settings.mode,\n        x: [],\n        y: [],\n        name: dataObject.target,\n        mode: cfg.settings.mode\n      };\n\n      this.traces[refId][dataObject.target] = trace;\n\n\n\n      let datapoints = dataObject.datapoints;\n\n      if (dataObject.type == 'docs') {\n        // Because ES has nested keys, we want to expose these to the user. To do this, we\n        // prove the dot notation string the user can select, but on the backend, we have to\n        // transverse the object to retrieve the value. This provides a function for each\n        // index the user can select that will retries the value from the provided data\n        // structure\n\n        for(let j=0; j<datapoints.length; j++) {\n          const point = datapoints[j];\n          let esKeys = this.findKeys(point);\n          Object.keys(esKeys).forEach((key) => {\n            const esKeyLookup = esKeys[key];\n            this.displayOptions[refId][key] = (obj) => {\n              let val = obj;\n              for(let i=0; i<esKeyLookup.length; i++){\n                val = val[esKeyLookup[i]];\n              }\n              return val;\n            }\n          });\n        }\n      } else {\n        for(let j=0; j<datapoints[0].length; j++) {\n          this.displayOptions[refId][j] = (obj) => {\n            return obj[j];\n          };\n        }\n      }\n\n      // Figure out what index is going to be X and which will be Y\n      // The default return is [value, timestamp] from ES date histogram Count\n      let xIndex = (obj) => {\n        if (mapping.x) {\n          return this.displayOptions[refId][mapping.x](obj);\n        } else {\n          return obj[mapping.x || 1];\n        }\n      };\n      let yIndex = (obj) => {\n        if (mapping.x) {\n          return this.displayOptions[refId][mapping.y](obj);\n        } else {\n          return obj[mapping.y || 0];\n        }\n      };\n      let zIndex = (obj) => {\n        if (mapping.z) {\n          return this.displayOptions[refId][mapping.z](obj);\n        } else {\n          return obj[mapping.z || 2];\n        }\n      };\n\n\n      for(var j=0; j<datapoints.length; j++) {\n        const point = datapoints[j];\n        let xdata, ydata, zdata;\n        if (refId == mapping.x_query) {\n          let data = xIndex(point);\n          if(Array.isArray(data)) {\n            xdata = data[0];\n          } else {\n            xdata = data;\n          }\n        }\n        if (refId == mapping.y_query) {\n          let data = yIndex(point);\n          if(Array.isArray(data)) {\n            ydata = data[0];\n          } else {\n            ydata = data;\n          }\n        }\n        if (typeof xdata !== 'undefined' && typeof ydata !== 'undefined') {\n          trace.x.push(xdata);\n          trace.y.push(ydata);\n        }\n      }\n\n      trace.marker = $.extend(true, {}, cfg.settings.marker);\n      trace.line = $.extend(true, {}, cfg.settings.line);\n      if (cfg.settings.marker.color === null) {\n        trace.marker.color = this.getRandomColor();\n      }\n      if (cfg.settings.line.color === null) {\n        trace.line.color = this.getRandomColor();\n      }\n\n      this.data.push(trace);\n    }\n\n    this.render();\n  }\n\n  onConfigChanged() {\n    console.log( \"Config changed...\");\n    if(this.graph) {\n      Plotly.Plots.purge(this.graph);\n      this.graph.innerHTML = '';\n      this.initalized = false;\n    }\n\n    var cfg = this.panel.pconfig;\n    for(let i=0; i<this.data.length; i++) {\n      this.data[i].type = cfg.settings.type;\n      this.data[i].mode = cfg.settings.mode;\n    }\n\n    var axis = [ this.panel.pconfig.layout.xaxis, this.panel.pconfig.layout.yaxis];\n    for(let i=0; i<axis.length; i++) {\n      if( axis[i].rangemode === 'between' ) {\n        if( axis[i].range == null) {\n          axis[i].range = [0, null];\n        }\n      }\n      else {\n        axis[i].range = null;\n      }\n    }\n    this.refresh();\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    this.graph = elem.find('.plotly-spot')[0];\n    this.initalized = false;\n    elem.on( 'mousemove', (evt) => {\n      this.mouse = evt;\n    });\n  }\n\n  //---------------------------\n\n\n  getSymbolSegs()\n  {\n    var txt = [\n\"circle\",\"circle-open\",\"circle-dot\",\"circle-open-dot\",\n\"square\",\"square-open\",\"square-dot\",\"square-open-dot\",\n\"diamond\",\"diamond-open\",\n\"diamond-dot\",\"diamond-open-dot\",\n\"cross\",\"cross-open\",\n\"cross-dot\",\"cross-open-dot\",\n\"x\",\"x-open\",\"x-dot\",\"x-open-dot\",\n\"triangle-up\",\n\"triangle-up-open\",\n\"triangle-up-dot\",\n\"triangle-up-open-dot\",\n\"triangle-down\",\n\"triangle-down-open\",\n\"triangle-down-dot\",\n\"triangle-down-open-dot\",\n\"triangle-left\",\n\"triangle-left-open\",\n\"triangle-left-dot\",\n\"triangle-left-open-dot\",\n\"triangle-right\",\n\"triangle-right-open\",\n\"triangle-right-dot\",\n\"triangle-right-open-dot\",\n\"triangle-ne\",\n\"triangle-ne-open\",\n\"triangle-ne-dot\",\n\"triangle-ne-open-dot\",\n\"triangle-se\",\n\"triangle-se-open\",\n\"triangle-se-dot\",\n\"triangle-se-open-dot\",\n\"triangle-sw\",\n\"triangle-sw-open\",\n\"triangle-sw-dot\",\n\"triangle-sw-open-dot\",\n\"triangle-nw\",\n\"triangle-nw-open\",\n\"triangle-nw-dot\",\n\"triangle-nw-open-dot\",\n\"pentagon\",\n\"pentagon-open\",\n\"pentagon-dot\",\n\"pentagon-open-dot\",\n\"hexagon\",\n\"hexagon-open\",\n\"hexagon-dot\",\n\"hexagon-open-dot\",\n\"hexagon2\",\n\"hexagon2-open\",\n\"hexagon2-dot\",\n\"hexagon2-open-dot\",\n\"octagon\",\n\"octagon-open\",\n\"octagon-dot\",\n\"octagon-open-dot\",\n\"star\",\n\"star-open\",\n\"star-dot\",\n\"star-open-dot\",\n\"hexagram\",\n\"hexagram-open\",\n\"hexagram-dot\",\n\"hexagram-open-dot\",\n\"star-triangle-up\",\n\"star-triangle-up-open\",\n\"star-triangle-up-dot\",\n\"star-triangle-up-open-dot\",\n\"star-triangle-down\",\n\"star-triangle-down-open\",\n\"star-triangle-down-dot\",\n\"star-triangle-down-open-dot\",\n\"star-square\",\n\"star-square-open\",\n\"star-square-dot\",\n\"star-square-open-dot\",\n\"star-diamond\",\n\"star-diamond-open\",\n\"star-diamond-dot\",\n\"star-diamond-open-dot\",\n\"diamond-tall\",\n\"diamond-tall-open\",\n\"diamond-tall-dot\",\n\"diamond-tall-open-dot\",\n\"diamond-wide\",\n\"diamond-wide-open\",\n\"diamond-wide-dot\",\n\"diamond-wide-open-dot\",\n\"hourglass\",\n\"hourglass-open\",\n\"bowtie\",\n\"bowtie-open\",\n\"circle-cross\",\n\"circle-cross-open\",\n\"circle-x\",\n\"circle-x-open\",\n\"square-cross\",\n\"square-cross-open\",\n\"square-x\",\n\"square-x-open\",\n\"diamond-cross\",\n\"diamond-cross-open\",\n\"diamond-x\",\n\"diamond-x-open\",\n\"cross-thin\",\n\"cross-thin-open\",\n\"x-thin\",\n\"x-thin-open\",\n\"asterisk\",\n\"asterisk-open\",\n\"hash\",\n\"hash-open\",\n\"hash-dot\",\n\"hash-open-dot\",\n\"y-up\",\n\"y-up-open\",\n\"y-down\",\n\"y-down-open\",\n\"y-left\",\n\"y-left-open\",\n\"y-right\",\n\"y-right-open\",\n\"line-ew\",\n\"line-ew-open\",\n\"line-ns\",\n\"line-ns-open\",\n\"line-ne\",\n\"line-ne-open\",\n\"line-nw\",\n\"line-nw-open\"\n    ];\n\n    var segs = [];\n    _.forEach(txt, (val) => {\n      segs.push( this.uiSegmentSrv.newSegment( val ) );\n    });\n    return this.q.when( segs );\n  }\n}\nPlotlyPanelCtrl.templateUrl = 'module.html';\n\nexport {\n  PlotlyPanelCtrl as PanelCtrl\n};\n\n\n"]}